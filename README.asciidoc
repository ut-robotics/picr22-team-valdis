# picr22-team-valdis Motor and Mainboard drivers

The purpose of this board is to control 3 motor drivers and 1 additional servo. This can be done with an external serial connection through USB. Additionally, the board also provides power for the 3 motor drivers (servo requires separate power source).

The main communication for each motor goes through STM32G441KBT6, which is separately programmable through J2 connector. Power delivery for this chip is supplied via USB 5V which is converted down to 3.3V through a voltage regulator (NCP164CSN330T1G). The USB connection also has protection provided by CM1223-02SO TVS diode package. An additional debug LED is also connected to indicate if signal is being outputted to motor drivers.

The motor driver side is powered by an external LiPo battery (in our case a 16.8V 4S) and is isolated from the MCU side. Before the signal reaches motor drivers, it goes through isolators (MAX14930DASE+) to ensure correct signal between two board power supplies. Batteries are connected via 4x4mm solder pads and go through a reverse voltage protector (BUK6Y10-30P) to protect components. For providing power to the isolators, voltage is dropped from 16V to 5V via voltage regulator (NCV8730ASN500T1G).

Motor drivers (PDRV8243HRXYQ1) receive 16.8V input for power. From the isolators, drivers receive a PWM, direction and sleep signal. PWM signal tells how fast the motors have to spin and direction signal indicates via boolean (0 or 1) which way the wheel spins. Sleep signal is basically there to wake up the motor drivers from standby state. For simplicity we connected DRVOFF to ground, which means that they will never be turned off while power is connected. Current for motor drivers are limited with 47K resistors through ITRIP pin and 2.2K resistors through IPROP pin. This sets ITRIP voltage to 2.31V and driver output current to around 3.2A. Motor driver power is also supplied through 4x4mm solder pads.

== Pinout for STM32G441KBT6

PA0 - M1_PWM_A (wheel PWM signal output)

PA1 - M2_PWM_A (wheel PWM signal output)

PA2 - M3_PWM_A	(wheel PWM signal output)

PA3 - TRW_PWM (thrower PWM signal)

PA5 - M1_DIR_A	(wheel direction output)

PA6 - M2_DIR_A (wheel direction output)

PA7 - M3_DIR_A (wheel direction output)

PA8 - M1_ENC_A (wheel encoder read)

PA9 - M1_ENC_B (wheel encoder read)

PA11 - USB_N (USB input data-)

PA12 - USB_P (USB input data+)

PA13 - SWDIO (Serial Wire Data I/O)

PA14 - SWCLK (Serial Wire Clock)

PF0-OSC_IN - LED (debug led for sending commands)

PG10-NRST - NRST (MCU reset)

PB3 - SLEEP_n (signal to wake up motor driver)

PB4 - M2_ENC_A (wheel encoder read)

PB5 - M2_ENC_B (wheel encoder read)

PB6 - M3_ENC_B (wheel encoder read)

PB7 - M3_ENC_A (wheel encoder read)

Pins 1,17,15,16,32,14 are used for power. Rest of unmentioned pins were not used.


== J2 Programmer

1 - 3.3V

2 - SWDIO

3 - GND

4 - SWCLK

5 - GND

6 - NC

7 - NC

8 - NC

9 - GND

10 - NRST


== J3 Motor 1

1 - GND

2 - 3.3V

3 - M1_ENC_A

4 - M1_ENC_B


== J4 Motor 2

1 - GND

2 - 3.3V

3 - M2_ENC_A

4 - M2_ENC_B


== J5 Motor 3

1 - GND

2 - 3.3V

3 - M3_ENC_A

4 - M3_ENC_B


== J6 Thrower 

1 - GND

2 - TRW_PWM

3 - NC

4 - NC
